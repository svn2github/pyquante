from PyQuante.IO.Data import Data

class Handler(object):
    key = "xyz"
    description = "XYZ File Format"
    ext = ".xyz"
    def read(self,string):
        """
        Arguments:
        
        - string: String to parse
        
        Return:
        
        - data: Data object, with a molecule and a molecules
          attribute.
        """
        from PyQuante.Element import sym2no
        from PyQuante.Molecule import Molecule
        geometries = []
        igeo = 1
        lines = string.splitlines()
        while 1:  
            try: 
                line = lines.pop(0)
            except IndexError:
                break
            if not line: break
            nat = int(line.split()[0])
            title = lines.pop(0)
            atoms = []
            for i in xrange(nat):
                line = lines.pop(0)
                words = line.split()
                atno = sym2no[words[0]]
                x,y,z = map(float,words[1:])
                atoms.append((atno,(x,y,z)))
            atoms = Molecule("XYZ geometry #%d" % igeo,atoms)
            igeo += 1
            geometries.append(atoms)
        
        data = Data()
        data.molecule = geometries[0] # First geometry
        data.molecules = geometries
        return data

    def write(self,data):
        ret = ''
        if data.molecules:
            for molecule in data.molecules:
                ret += self.generate_entry(molecule)
        elif data.molecule:
            ret += self.generate_entry(data.molecule)
        else:
            raise ValueError("Nothing to generate")
        return ret
    
    def generate_entry(self,molecule):
        from PyQuante.Element import symbol
        ret = ''
        ret+="%d\n%s\n" % (len(molecule.atoms),"XYZ File generated by PyQuante")
        for atom in molecule.atoms:
            atno,(x,y,z) = atom.atuple()
            ret+=("%4s %10.4f %10.4f %10.4f\n"
                       % (symbol[atno],x,y,z))
        return ret
